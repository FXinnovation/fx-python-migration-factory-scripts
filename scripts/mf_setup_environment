#!/usr/bin/sh

FORCE=false

display_help() {
  echo "$0"
  echo " "
  echo "options:"
  echo "-h, --help                show brief help"
  echo "-f, --force               force to reset environment variables even if they are already set"
  exit 0
}

check_arguments() {
  while test "$#" -gt 0; do
    case "$1" in
    -h | --help)
      display_help
      return 0
      ;;
    -f | --force)
      FORCE=true
      shift
      ;;
    *)
      print_error "\e[1m$1\e[22m is not a valid option."
      return 1
      ;;
    esac
  done
}

set_environment_variable() {
  # $1: name of the environment variable
  # $2: Text to prompt if variable need to be set
  # $3: Is a secret text

  if [ ! `printenv $1` ] || [ "$FORCE" = true ]
  then
    if [ "$3" = true ] 
    then
      read -s -r -p "$2: " input
    else
      read -r -p "$2: " input
    fi
    echo "Setting $1 environment variable ..."
    export $1=$input
    echo "  âœ” Done"
  else
    echo "$1 already set. Skipping..."
  fi
}

check_arguments "$@"
echo "Setting up your environment for migration factory"

set_environment_variable "MF_USERNAME" "Factory username"
set_environment_variable "MF_PASSWORD" "Factory password" true
set_environment_variable "MF_CE_API_TOKEN" "Cloud Endure API token" true
set_environment_variable "MF_WINDOWS_USERNAME" "Windows username"
set_environment_variable "MF_WINDOWS_PASSWORD" "Windows password" true
set_environment_variable "MF_AWS_ACCESS_KEY_ID" "AWS access key ID"
set_environment_variable "MF_AWS_SECRET_ACCESS_KEY" "AWS secret access key" true
